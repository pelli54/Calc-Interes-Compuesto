{"version":3,"sources":["Components/Help.js","Components/Title.js","Components/FormItemSingle.js","Components/FormItemSelect.js","Components/Form.js","Components/ResultDetails.js","Components/Table.js","Utils/Utils.js","Utils/InitialState.js","App.js","serviceWorker.js","index.js"],"names":["Help","className","Title","setOpenHelp","openHelp","onClick","FormItemSingle","value","handleChange","name","title","unlabel","htmlFor","id","type","onChange","FormItemSelect","short","Form","form","handleSubmit","onSubmit","initial","porc","timeInt","prima","timePrima","lapso","timeLapso","ResultDetails","result","parseFloat","toFixed","length","Table","isPar","isAdd","isDayToPay","map","a","i","key","acc","day","num","prev","initialState","timeLapsoinDays","timePrimainDays","interesDiario","App","React","useState","InitialState","setForm","setResult","mensaje","setMensaje","e","newForm","target","Math","abs","preventDefault","res","push","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2cc8f94.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Help() {\r\n\treturn (\r\n\t\t<div className=\"helpContainer\">\r\n\t      <h3>Bienvenido a esta pequena App</h3>\r\n\t      <p>con esta aplicacion podras calcular el interes que genera tus ahorros de forma compuesta hasta cierto tiempo. esto quiere decir que la inversion que se ingrese en alguna entidad financiera que ofrezca algun interes anual se puede adicionar a la inversion original, de forma que el proximo pago de interes será en base a la inversion original mas los intereses anteriores. Es comun que las personas que ahorren de esta manera hagan un Abono periodicamente de forma que tambien se añadirá al ahorro acumulado.</p>\r\n\t      <h4>¿Como Usar?</h4> \r\n\t      <p>#El primer Parametro es la inversion original o initial. Es un valor numerico sin la unidad monetaria. Por defecto es 100</p>\r\n\t      <p>#El segundo parametro es la taza de interes Anualizado, el interes que te ofrece la intidad financiera en un año, en el caso de que su interes no sea Anual debe transformarlo a anual, es decir, si su interes es de 1% mensual debe multiplicarlo po 12 (meses) para que sea 12% de interes Anual. por defecto es 10%</p>\r\n\t      <p>#El tercer parametro es el periodo de tiempo en el que su entidad financiera le paga el interes equivalente a ese periodo de tiempo, es decir, si su interes Anual es de 12% y se paga mensualmente quiere decir que cada mes se pagará un 1% de interes de su ahorro. Por Defecto es Diario (1 Dia)</p>\r\n\t      <p>#El cuarto parametro es el Abono, la cantidad de dinero que se ingresara a su cuenta de ahorra cada cierto tiempo, por defecto es cero (0)</p>\r\n\t      <p>#El quinto parametro es el periodo de tiempo que se hará un abono a su cuenta de ahorros, es decir, si selecciona Quincenal se añadirá la cantidad de dinero especificada en el campo anterior cada quincena (15 dias)</p>\r\n\t      <p>#El ultimo campo es para especificar la cantidad de tiempo en que se hara su estudio, por ejemplo, si en el primer campo coloca seis (6) y en el segundo selecciona Meses quiere decir que el estudio de su interes se hara para los proximos 6 meses (186 dias) </p>\r\n\t      <h4>Los Resultados:</h4>\r\n\t      <p>luego de suministrar todos los datos en el formulario y hacer click en el boton de Calcular, en la seccion de resultados se mostrara:</p>\r\n\t      <p>#En unos recuadros verdes: la inversion inicial, la cantidad de dinero al final del  estudio, y la diferencia de dinero entre la cantidad final y la cantidad inicial </p>\r\n\t      <p>#Seguido, una tabla, en la primera columna el dia, en la segunda columna la cantidad de dinero en ese dia en especifico, en la tercera columna la cantidad adicionada proveniente de los intereses, en la ultima la cantidad de dinero adicionada proveniente de los abonos periodicos </p>\r\n\t      <p>#cada vez que si añade dinero a la cuenta aparecerá de color verde y con el signo de mas (+) el principio</p>\r\n\t      <p>Espero que les haya gustado y servido la aplicacion. si quieres conocer el codigo fuente de esta aplicacion visita el repositorio de github: github.com pelli54 calculadoraInteresCompuesto --aplicacion creada por Pelli54-- </p>\r\n\t    </div>\r\n\t)\r\n}","import React from 'react';\r\n\r\nexport const Title = ({setOpenHelp, openHelp}) => {\r\n\treturn (\r\n\t\t<div className=\"title\">\r\n          <span>Calculadora de Interes Compuesto</span>\r\n          <i onClick={(() => setOpenHelp(!openHelp))}><span>{openHelp?\"x\":\"?\"}</span></i>\r\n        </div>\r\n\t)\r\n}","import React from 'react';\r\n\r\nexport const FormItemSingle = ({value, handleChange, name, title, className, unlabel}) => {\r\n\treturn (\r\n\t\t<div className={className}>\r\n          {!unlabel&&<label htmlFor={name} >{title}</label>}\r\n          <input id={name} type=\"number\" name={name} value={value} onChange={handleChange} /> \r\n        </div>\r\n\t)\r\n}","import React from 'react';\r\n\r\nexport const FormItemSelect = ({value, handleChange, name, title, className, short, unlabel}) => {\r\n\treturn (\r\n\t\t<div className={className}>\r\n            {!unlabel&&<label htmlFor={name} >{title}</label>}\r\n            <select id={name} name={name} onChange={handleChange} value={value} >\r\n        \t\t<option value=\"1\">{short?\"Dias\":\"Diario\"}</option>\r\n        \t\t{!short&&<option value=\"3\">3 Dias</option>}\r\n        \t\t<option value=\"7\">{short?\"Semanas\":\"Semanal\"}</option>\r\n        \t\t{!short&&<option value=\"15\" >Quincenal</option>}\r\n        \t\t{!short&&<option value=\"21\">3 Semanas</option>}\r\n        \t\t<option value=\"31\">{short?\"Meses\":\"Mensual\"}</option>\r\n        \t\t{!short&&<option value=\"93\">3 Meses</option>}\r\n        \t\t{!short&&<option value=\"186\">6 Meses</option>}\r\n        \t\t<option value=\"365\">{short?\"Años\":\"Anual\"}</option>\r\n            </select>\r\n        </div>\r\n        \r\n\t)\r\n}","import React from 'react';\r\nimport {FormItemSingle} from './FormItemSingle'\r\nimport {FormItemSelect} from './FormItemSelect'\r\n\r\nexport const Form = ({form, handleChange, handleSubmit}) => {\r\n\treturn (\r\n\t\t<form className=\"form\" onSubmit={handleSubmit}>\r\n            <FormItemSingle \r\n                className=\"w-100 formItem\" \r\n                value={form.initial} \r\n                name={\"initial\"} \r\n                handleChange={handleChange} \r\n              \ttitle={\"inversion inicial\"}\r\n            />\r\n            <div className=\"formGroup my\">\r\n              \t<FormItemSingle \r\n                \tclassName=\"w-50 formItem\" \r\n                \tvalue={form.porc} \r\n                \tname={\"porc\"} \r\n                \thandleChange={handleChange} \r\n                \ttitle={\"% Interes Anual\"}\r\n              \t/>\r\n              \t<FormItemSelect \r\n                \tclassName=\"w-50 formItem\" \r\n                \tvalue={form.timeInt} \r\n                \tname={\"timeInt\"} \r\n                \thandleChange={handleChange} \r\n                \ttitle={\"Retorno de interes\"}\r\n                />\r\n            </div>\r\n            <div className=\"formGroup my\">\r\n              \t<FormItemSingle \r\n                \tclassName=\"w-50 formItem\" \r\n                \tvalue={form.prima} \r\n                \tname={\"prima\"} \r\n                \thandleChange={handleChange} \r\n                \ttitle={\"Abono\"}\r\n                />\r\n                <FormItemSelect \r\n                \tclassName=\"w-50 formItem\" \r\n                \tvalue={form.timePrima} \r\n                \tname={\"timePrima\"} \r\n                \thandleChange={handleChange} \r\n                \ttitle={\"Periodo\"}\r\n                />\r\n            </div>\r\n            <label htmlFor=\"lapso\" className=\"w-100\">Lapso Tiempo a Calcular</label>\r\n            <div className=\"formGroup\">\r\n                <FormItemSingle \r\n                \tclassName=\"w-50 formItem\" \r\n                \tvalue={form.lapso} \r\n                \tname={\"lapso\"} \r\n                \thandleChange={handleChange} \r\n                \tunlabel\r\n                />\r\n                <FormItemSelect \r\n                \tclassName=\"w-50 formItem\" \r\n                \tvalue={form.timeLapso} \r\n                \tname={\"timeLapso\"} \r\n                \thandleChange={handleChange} \r\n                \tunlabel\r\n                \tshort\r\n              \t/>\r\n            \t</div>\r\n            \t<button type=\"submit\" className=\"my\">Calcular</button>\r\n            </form>\r\n\t)\r\n}","import React from 'react';\r\n\r\nexport const ResultDetails = ({result, className}) => {\r\n\treturn (\r\n\t\t<div className={className}>\r\n            <span>Inicial: {parseFloat(result[0][0]).toFixed(2)}</span>\r\n            <span>Final: {parseFloat(result[0][result[0].length-1]).toFixed(2)}</span>\r\n            <span>Diff: {parseFloat(result[0][result[0].length-1] - result[0][0]).toFixed(2)}</span>\r\n        </div>\t\t\r\n\t)\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport const Table = ({result, isPar, isAdd, isDayToPay}) => {\r\n\treturn (\r\n\t<table>\r\n        <thead>\r\n            <tr>\r\n\t\t\t\t<th className=\"first\">Dia</th>\r\n                <th>Dinero</th>\r\n                <th>Interes</th>\r\n                <th>Abono</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\t        {\r\n\t            result[0].map((a,i) => (\r\n\t                <tr key={i} className={isPar(i)?\"bg-2\":\"bg-1\"}>\r\n\t                    <th>{i}</th>\r\n\t                    <td>{parseFloat(a).toFixed(3)}</td>\r\n\t                    <td className={isAdd(a,result[0][i-1]) && isDayToPay(i, result[1].timeInt) && i>0?\"add\":\"\"} >\r\n\t                    \t{isAdd(a,result[0][i-1])&&i>0?\"+\":\"\"}\r\n\t                    \t{i>0?(isDayToPay(i, result[1].timePrima)?a-result[0][i-1]-result[1].prima:a-result[0][i-1]).toFixed(3):parseFloat(0.000).toFixed(3)}\r\n\t                    </td>\r\n\t                    <td className={isDayToPay(i, result[1].timePrima) && i>0 && result[1].prima?\"add\":\"\"} >\r\n\t                    \t{isDayToPay(i,result[1].timePrima) && i>0 && result[1].prima>0?\"+\":\"\"}\r\n\t                     \t{i>0 && isDayToPay(i,result[1].timePrima)?parseFloat(result[1].prima).toFixed(3):parseFloat(0.000).toFixed(3)}\r\n\t                    </td>\r\n\t                </tr>\r\n\t            ))\r\n\t        }\r\n          </tbody>\r\n    </table>)\r\n}","const isDayToPay = (acc, day) => {\r\n\treturn acc%day===0 && acc>0?true:false\r\n}\r\n\r\nconst isPar = (num) =>{\r\nreturn num%2===0?true:false\r\n}\r\n\r\nconst isAdd = (num, prev) => {\r\nreturn num-prev!==0?true:false\r\n}\r\n\r\nexport {isDayToPay, isPar, isAdd}","const initialState = {\r\n    initial: 100,\r\n    lapso: 8,\r\n    porc: 10,\r\n    prima: 0,\r\n    timeInt: 1,\r\n    timePrima: 15,\r\n    timeLapso: 7,\r\n    timeLapsoinDays:56,\r\n    timePrimainDays:0,\r\n    interesDiario: 0.8219\r\n  }\r\n\r\nexport default initialState","import React from 'react';\nimport './App.css'\nimport Help from './Components/Help'\nimport {Title} from './Components/Title'\nimport {Form} from './Components/Form'\nimport {ResultDetails} from './Components/ResultDetails'\nimport {Table} from './Components/Table'\n\nimport {isAdd, isPar, isDayToPay} from './Utils/Utils'\nimport InitialState from './Utils/InitialState'\n\nfunction App() {\n\n  const [form, setForm] = React.useState(InitialState)\n  const [result, setResult] = React.useState([[]])\n  const [mensaje, setMensaje] = React.useState(\"\")\n  const [openHelp, setOpenHelp] = React.useState(false)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if(form.initial===0) {\n      return setMensaje(\n        \"La inversion Inicial no debe ser Cero (0)\");\n    }\n    if(form.timePrima>form.timeLapsoinDays && form.prima!==0) {\n      return setMensaje(\n        \"El periodo de ingreso de la Prima NO debe ser mayor al tiempo del lapso de calculo \");\n    }\n    if(form.timeLapsoinDays===0) {\n      return setMensaje(\n        \"El lapso de tiempo de estudio NO debe ser Cero (0)\");\n    }\n    if(form.porc===0) {\n      return setMensaje(\n        \"El porcentaje de interes Anual debe ser mayor a Cero\");\n    }\n    let acc = 0 //se inicializa el contador\n    let res = [form.initial] //se inicializa un array que almacana los resultados y se le asigna la inversion inicial como primervalor de la serie\n    while(acc<form.timeLapsoinDays){\n      res.push(\n        res[acc] + //el siguiente valores el actual mas...\n        (res[acc]*((acc+1)%form.timeInt===0?1:0)*form.interesDiario*form.timeInt)/100 + //al valor actual se multiplica por el porcentaje de interes, se determina si debe ser añadido el interes\n        ((acc+1)%form.timePrima===0?1:0)*form.prima\n      ) //se asigna el siguiente valor\n      acc++\n    }\n    let newForm = {...form}\n    setResult([res.map(a => a.toFixed(4)), newForm])\n    setMensaje(\"\")\n  }\n\n  const handleChange = (e) => {\n    let newForm = {\n      ...form,\n      [e.target.name]:Math.abs(parseFloat(e.target.value))\n    }\n    newForm = {\n      ...newForm,\n      interesDiario: parseFloat(newForm.porc/365),\n      timePrimainDays: parseFloat(newForm.timePrima*newForm.prima),\n      timeLapsoinDays: parseFloat(newForm.lapso*newForm.timeLapso)\n    }\n    setForm(newForm)\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <Title openHelp={openHelp} setOpenHelp={setOpenHelp} />\n        {\n          openHelp?<Help/>:\n          <Form form={form} handleChange={handleChange} handleSubmit={handleSubmit} />\n        }\n      </div>\n\n      <div className=\"result\">\n        {\n          result[0].length!==0 && <ResultDetails className=\"details\" result={result} />\n        }\n        <div className=\"table\">\n        {\n          result[0].length>0?(\n            <Table result={result} isPar={isPar} isAdd={isAdd} isDayToPay={isDayToPay} />\n            ):<h3 className=\"noResult\">Sin Resultados</h3>\n        }\n        </div>\n        \n      </div>\n      {mensaje!==\"\"?<div className=\"mensaje\"><span>{mensaje}</span></div>:<div></div>}\n    </div>  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}